#define F_CPU 16000000UL

#include <avr/io.h>
#include <util/delay.h>
unsigned int Dot[53][8] = {
{0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x42}, // A
{0x7c,0x42,0x42,0x7c,0x42,0x42,0x42,0x7c}, // B
{0x3c,0x42,0x42,0x40,0x40,0x42,0x42,0x3c}, // C
{0x78,0x44,0x42,0x42,0x42,0x42,0x44,0x78}, // D
{0x7e,0x40,0x40,0x7e,0x40,0x40,0x40,0x7e}, // E
{0x7e,0x40,0x40,0x7e,0x40,0x40,0x40,0x40}, // F
{0x3c,0x42,0x42,0x40,0x4e,0x42,0x42,0x3c}, // G
{0x42,0x42,0x42,0x7e,0x42,0x42,0x42,0x42}, // H
{0x1c,0x08,0x08,0x08,0x08,0x08,0x08,0x1c}, // I
{0x1c,0x08,0x08,0x08,0x08,0x08,0x28,0x10}, // J
{0x44,0x48,0x50,0x60,0x60,0x50,0x48,0x44}, // K
{0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7e}, // L
{0x42,0x66,0x5a,0x42,0x42,0x42,0x42,0x42}, // M
{0x42,0x62,0x52,0x4a,0x46,0x42,0x42,0x42}, // N
{0x3c,0x42,0x42,0x42,0x42,0x42,0x42,0x3c}, // O
{0x7c,0x42,0x42,0x42,0x7c,0x40,0x40,0x40}, // P
{0x3c,0x42,0x42,0x42,0x42,0x4a,0x46,0x3e}, // Q
{0x7c,0x42,0x42,0x7c,0x50,0x48,0x44,0x42}, // R
{0x3c,0x42,0x40,0x3c,0x02,0x02,0x42,0x3c}, // S
{0x3e,0x08,0x08,0x08,0x08,0x08,0x08,0x08}, // T
{0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3c}, // U
{0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18}, // V
{0x42,0x42,0x42,0x42,0x42,0x42,0x5a,0x24}, // W
{0x42,0x42,0x24,0x18,0x18,0x24,0x42,0x42}, // X
{0x22,0x22,0x22,0x14,0x08,0x08,0x08,0x08}, // Y
{0x7e,0x02,0x04,0x08,0x10,0x20,0x40,0x7e}, // Z
{0x00,0x00,0x18,0x04,0x1c,0x24,0x24,0x1a}, // a
{0x00,0x00,0x20,0x20,0x38,0x24,0x24,0x58}, // b
{0x00,0x00,0x00,0x18,0x24,0x20,0x24,0x18}, // c
{0x00,0x00,0x04,0x04,0x1c,0x24,0x24,0x1a}, // d
{0x00,0x00,0x00,0x18,0x24,0x3c,0x20,0x18}, // e
{0x00,0x00,0x08,0x14,0x10,0x38,0x10,0x10}, // f
{0x00,0x00,0x18,0x24,0x24,0x1c,0x04,0x18}, // g
{0x00,0x00,0x20,0x20,0x28,0x34,0x24,0x24}, // h
{0x00,0x00,0x08,0x00,0x08,0x08,0x08,0x08}, // i
{0x00,0x00,0x08,0x00,0x08,0x08,0x28,0x10}, // j
{0x00,0x00,0x20,0x24,0x28,0x30,0x28,0x24}, // k
{0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x08}, // l
{0x00,0x00,0x00,0x54,0x2a,0x2a,0x2a,0x2a}, // m
{0x00,0x00,0x00,0x2c,0x12,0x12,0x12,0x12}, // n
{0x00,0x00,0x00,0x18,0x24,0x24,0x24,0x18}, // o
{0x00,0x00,0x38,0x24,0x24,0x38,0x20,0x20}, // p
{0x00,0x00,0x1c,0x24,0x24,0x1c,0x04,0x04}, // q
{0x00,0x00,0x00,0x2c,0x30,0x20,0x20,0x20}, // r
{0x00,0x00,0x18,0x24,0x10,0x08,0x24,0x18}, // s
{0x00,0x00,0x00,0x10,0x38,0x10,0x10,0x18}, // t
{0x00,0x00,0x00,0x00,0x24,0x24,0x24,0x1a}, // u
{0x00,0x00,0x00,0x00,0x22,0x22,0x14,0x08}, // v
{0x00,0x00,0x00,0x00,0x2a,0x2a,0x2a,0x14}, // w
{0x00,0x00,0x00,0x22,0x14,0x08,0x14,0x22}, // x
{0x00,0x00,0x00,0x22,0x14,0x08,0x10,0x20}, // y
{0x00,0x00,0x00,0x3e,0x04,0x08,0x10,0x3e}, // z
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}; // SPACE
unsigned char HEELO_High[5][8] = {
	{0xbd,0xbd,0xbd,0x81,0xbd,0xbd,0xbd,0xff},
	{0x81,0xfd,0xfd,0x81,0xfd,0xfd,0x81,0xff},
	{0xfd,0xfd,0xfd,0xfd,0xfd,0xfd,0x81,0xff},
	{0xfd,0xfd,0xfd,0xfd,0xfd,0xfd,0x81,0xff},
	{0xc3,0xbd,0xbd,0xbd,0xbd,0xbd,0xc3,0xff},
	};
unsigned char eye[][8] = {
	{0x81,0x7e,0x7e,0x66,0x66,0x7e,0x7e,0x81},
	{0xf1,0xee,0xde,0xa6,0x66,0x7e,0xbd,0xc3},
	{0x8f,0x77,0x7b,0x65,0x66,0x7e,0xbd,0xc3}
};
unsigned char heart1[][8] = {
	{0x8f,0x7,0x7,0x7,0xf,0x1f,0x3f,0x7f}
};
unsigned char heart2[][8] = {
	{0xf1,0xe1,0xe0,0xe0,0xf0,0xf8,0xfc,0xfe}
};
unsigned char GOOD_High[][8] = {
	{0x83,0xfd,0xfd,0x85,0xbd,0xbd,0xc3,0xff}, //G
	{0xc3,0xbd,0xbd,0xbd,0xbd,0xbd,0xc3,0xff}, //O
	{0xc3,0xbd,0xbd,0xbd,0xbd,0xbd,0xc3,0xff}, //O
	{0xc1,0xbd,0xbd,0xbd,0xbd,0xbd,0xc1,0xff}  //D
};
unsigned char BYE_High[][8] = {
	{0xc1,0xbd,0xbd,0xc5,0xbd,0xbd,0xc1,0xff}, //B
	{0xbd,0xbd,0xbd,0xdb,0xe7,0xef,0xef,0xef}, //Y
	{0x81,0xfd,0xfd,0x81,0xfd,0xfd,0x81,0xff}, //E
	{0xff,0xff,0xfb,0x75,0xae,0xdf,0xff,0xff} // ~
};
unsigned char Low[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
int main()
{
	DDRA = 0xff; DDRB = 0xff; 
	DDRC= 0xff; DDRE = 0xff;  
	DDRF = 0xff; DDRD= 0xff;
	
	while(1)
	{
	 
		for(int j=0; j<53; j++){ // 행
		 for(int e=0; e<8; e++){  // 흐르는 경우의 수 8개
			for(int k=0; k<10; k++){ // 흐르는 시간 설정
				for(int i=0; i<8; i++){ //열
					PORTF = ~Low[i];
					PORTE = Dot[j][i]<<e;
					_delay_ms(1);
					}
				}
			}
			for(int j=0; j<1; j++){ // 행
				for(int e=0; e<9; e++){  // 흐르는 경우의 수 8개
					for(int k=0; k<10; k++){ // 흐르는 시간 설정
						for(int i=0; i<8; i++){ //열
							PORTB = ~Low[i];
							PORTA = ~heart1[j][i]<<e;
							PORTD = ~Low[i];
							PORTC = ~heart2[j][i]<<e;
							_delay_ms(1);
						}
					}
				}
			}
	  }
	}
	return 0;
}
